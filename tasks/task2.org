#+TITLE: Assignment 2. Intro to modern programming tools and techniques. Fall '16 - Spring '17
#+OPTIONS: toc:nil

* Description
As part of *assignment 2* you will do the analysis of a time series and try to forecast its future value for the next several months.

While working on the assignment you will learn:
- How to read the data and visualize it.
- How to determine properties of a time-series and what models could be used for forecasting.
- How to estimate the quality of the built models.

The main objective of *assignment 2* is to continue learning Python while getting familiar with libraries such as Pandas
(data wranling), statsmodels (building and evaluating statistical models including time-series).

What you need to do:
1. Read data from [[file:task2/training.csv][training.csv]]. Do not use data from [[file:task2/testing.csv][testing.csv]] in any experiments except the final one!
2. /(25 points)/ Check if the time-series is *stationary in a wide-sense*.
   This can be done in two ways:
   1. Assess visually: draw the time-series and its moving statistics (average, standard deviation).
   2. Do a Dickey â€” Fuller test.

   Make conclusions.
3. /(15 points)/ Decompose the time-series into trend, seasonality, and residue using additive and multiplicative models.
   Visualize them, check their stationarity. Make conclusions.
4. Check if the time-series is *integrated of order k*. In case it is, use ARIMA model with parameters chosen according to
   autocorrelation and partial autocorrelation function.
   - You must justify your choise of parameters.
   - Use several models.
   - Do a forecast for a training set. Visualize it.
   - Calculate ~r2 score~ for each of the models.
   - Pick the best model according to /Akaike information criterion/. Analyze the results.
   

Correctly completing all the above will give you 90 points.
You additionally can get:
- +10 points -- comply with PEP8.
- +10 points -- use ~bokeh~ or ~seaborn~ for visualization. Make it pretty.
- +30 points will be given to a group that builds the best model. You can use various statistical and machine learning
  models (ARIMA, ES, ARFIMA, LSTM, various regressions, etc.)

* Submission
  The assignment *must* be done by a group of 2-3.
  The process is described in ~README.org~, section [[file:~/dev/cmc-courses/prac-5sem-2016/README.org::#submission-rules][Submission rules]].

* Dates
- Submit PR before 5 Dec 2016.
- Pass review before 12 Dec 2016.

* Links

[[http://pandas.pydata.org/][Pandas]] --- a library for working with structured data and data wranling.

[[http://statsmodels.sourceforge.net/][Statsmodels]] --- a library for building statistical models.

